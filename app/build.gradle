apply plugin: 'com.android.model.application'
model {
    android {
        compileSdkVersion = 25
        buildToolsVersion = "25.0.1"

        defaultConfig {
            applicationId = "com.neocaptainnemo.ndk"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 25
            versionCode = 1
            versionName = "1.0"
        }
        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-rules.txt'))
            }
        }

        ndk {
            toolchain = 'clang'
            moduleName = 'jni'
            stl = 'gnustl_static' // recommending gnustl_static/gnustl_shared for android
            cppFlags.addAll(['-std=c++11', '-Wall', // glm could not take -Wall -Werror
                             '-D GLM_FORCE_SIZE_T_LENGTH', '-D GLM_FORCE_RADIANS',
                             '-I' + file('src/main/jni'), '-frtti', '-fexceptions'])
            ldLibs.addAll(['android', 'EGL', 'GLESv2', 'OpenSLES', 'log', 'png', 'z'])
        }


        productFlavors {
            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
            // https://developer.android.com/ndk/guides/abis.html#sa

            create("x86") {
                ndk.abiFilters.add("x86")
                ndk.ldFlags.addAll(["-L${file('jniLibs/libpng/x86/')}".toString()])
            }
            create("armeabi") {
                ndk.abiFilters.add("armeabi")
                ndk.ldFlags.addAll(["-L${file('jniLibs/libpng/armeabi/')}".toString()])
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.1.0'
}